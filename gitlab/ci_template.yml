stages:
  - 'preparation'
  # Test just one basic build, if it succeeds proceed to test the rest
  - 'build'
  - 'test'
  # Run multiple builds and tests, multi-distro, multi-arch
  - 'full builds'
  - 'full tests'

variables:
  CERBERO_IMAGE: 'registry.freedesktop.org/gstreamer/gst-ci/amd64/cerbero-fedora:fb91ee18309ab981289aa818ab2a7824ef0567a1'
  FEDORA_IMAGE: 'registry.freedesktop.org/gstreamer/gst-ci/amd64/fedora:fb91ee18309ab981289aa818ab2a7824ef0567a1'
  INDENT_IMAGE: 'registry.freedesktop.org/gstreamer/gst-ci/amd64/gst-indent:6f7e01e1e30a73efa880acdc8e911f1f20c58dbb'
  MANIFEST_IMAGE: 'registry.freedesktop.org/gstreamer/gst-ci/amd64/build-manifest:d19082b72667fb3382bdc3621520c4d26e258b2e'

  GIT_STRATEGY: none
  DEFAULT_MESON_ARGS: >
    --werror
    -Dpython=enabled
    -Dlibav=enabled
    -Dugly=enabled
    -Dbad=enabled
    -Ddevtools=enabled
    -Dges=enabled
    -Drtsp_server=enabled
    -Dvaapi=enabled
    -Dsharp=disabled

  DEFAULT_CERBERO_ARGS: >
    --variants werror
    --timestamps

manifest:
  image: $MANIFEST_IMAGE
  stage: 'preparation'
  script:
    - cd /gst-ci
    - gitlab/build_manifest.py --self-update
    - gitlab/build_manifest.py ${CI_PROJECT_DIR}/manifest.xml
    - cat ${CI_PROJECT_DIR}/manifest.xml
  artifacts:
    expire_in: "7 days"
    paths:
      - "manifest.xml"

gst indent:
  image: $INDENT_IMAGE
  stage: 'preparation'
  variables:
    GIT_STRATEGY: 'fetch'
  script:
    # man indent. grep RETURN VALUE, grab a beer on my behalf...
    - indent --version || true
    - curl -o gst-indent https://gitlab.freedesktop.org/gstreamer/gstreamer/raw/master/tools/gst-indent
    - chmod +x gst-indent
    - find . -name '*.c' -exec ./gst-indent {} +
    - |
      if git diff --quiet; then
          echo "Code is properly formatted"
      else
          git diff --color=always
          echo 'style diverges, please run gst-indent first'
          exit 1
      fi
  except:
    variables:
      # No point on trying to format C files in those repositories
      - $CI_PROJECT_NAME == "gstreamer-sharp"
      - $CI_PROJECT_NAME == "gst-integration-testsuites"
      - $CI_PROJECT_NAME == "cerbero"

.build:
  stage: 'full builds'
  dependencies:
    - "manifest"
  variables:
    CC: "ccache gcc"
    CXX: "ccache g++"
    CCACHE_BASEDIR: "${CI_PROJECT_DIR}"
    CCACHE_DIR: "${CI_PROJECT_DIR}/ccache"
    MAIN_DIR: "${CI_PROJECT_DIR}/validate-output/"
    MESON_ARGS: "${DEFAULT_MESON_ARGS}"

  script:
    - ccache -z
    # Not sure why, but permission errors else
    # https://gitlab.freedesktop.org/alatiera/gstreamer/-/jobs/41441
    - cp -r /gst-build/ . && cd gst-build
    - ./git-update --no-interaction --manifest="${CI_PROJECT_DIR}/manifest.xml"
    - meson build/ $MESON_ARGS
    - ninja -C build/
    - ccache -s
  after_script:
    - cd gst-build/
    # Clean the artifacts packages to avoid copying "useless" build products.
    - test -d build && find build -name '*.[ao]' -delete
    # Clean the .git repos since we won't need them anymore
    - rm -rf subprojects/*/.git/
    - rm -rf build/subprojects/*/.git/
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - "${CCACHE_DIR}"
  artifacts:
    expire_in: '5 days'
    when: always
    paths:
      - "manifest.xml"
      - "gst-build/"
  except:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

build fedora x86_64:
  extends: '.build'
  stage: 'build'
  image: $FEDORA_IMAGE
  variables:
    MESON_ARGS: "${DEFAULT_MESON_ARGS} -Dsharp=enabled"

build_disable_debug fedora x86_64:
  extends: '.build'
  stage: 'build'
  image: $FEDORA_IMAGE
  variables:
    MESON_ARGS: "${DEFAULT_MESON_ARGS} -Dsharp=enabled -Dgstreamer:gst_debug=false"

.test:
  stage: 'test'
  variables:
    MAIN_DIR: "${CI_PROJECT_DIR}/validate-output/"
    # Disable colored output to avoid weird rendering issues
    GST_DEBUG_COLOR: 'no'

    # note the -b at the start of each line
    # Can't comment inline sadly
    # FIXME: get this into gst-validate-launcher KNOWN_ISSUES
    # gstreamer.pipelines_parse_launch.delayed_link: https://gitlab.freedesktop.org/gstreamer/gstreamer/issues/345
    # gstreamer.gst_gstsystemclock.test_async_sync_interaction: https://gitlab.freedesktop.org/gstreamer/gstreamer/issues/346
    # gstreamer.gst_gstsystemclock.test_periodic_multi: https://gitlab.freedesktop.org/gstreamer/gstreamer/issues/347
    # gstreamer.gst_gstsystemclock.test_periodic_shot: https://gitlab.freedesktop.org/gstreamer/gstreamer/issues/348
    # elements_multisocketsink.test_sending_buffers_with_9_gstmemories: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/525
    # elements_multisocketsink.test_client_next_keyframe: https://gitlab.freedesktop.org/gstreamer/gst-plugins-base/issues/516
    # flvmux.test_incrementing_timestamps: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/530
    # flvmux.test_video_caps_late: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/543
    # rtpbin.test_sender_eos: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/527
    # rtpbin.test_cleanup_recv: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/546
    # souphttpsrc.test_icy_stream: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/307
    # rtspserver.test_shared_udp: https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/61
    # rtpsession.test_multiple_senders_roundrobin_rbs: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/548
    # dtls: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/811
    # mpegtsmux.test_align: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/844
    # shm.test_shm_live: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/847
    # splitmux.test_splitmuxsink_async: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/531
    # splitmux.test_splitmuxsrc_caps_change: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/547
    # splitmux.test_splitmuxsrc_sparse_streams: https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/issues/544
    # netsim.netsim_stress: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/849
    # nle_complex.test_one_expandable_another: https://gitlab.freedesktop.org/gstreamer/gst-editing-services/issues/55
    # nle_simple.test_simplest: https://gitlab.freedesktop.org/gstreamer/gst-editing-services/issues/57
    # ges_basic.test_ges_pipeline_change_state: https://gitlab.freedesktop.org/gstreamer/gst-editing-services/issues/58
    # gst-editing-services.pythontests.pyunittest.python.test_timeline.TestTransitions.test_transition_type: https://gitlab.freedesktop.org/gstreamer/gst-editing-services/issues/62
    # gst-editing-services.pythontests.pyunittest.python.test_timeline.TestTransitions.test_auto_transition: https://gitlab.freedesktop.org/gstreamer/gst-editing-services/issues/63
    # pipelines_tcp.test_that_tcpserversink_and_tcpclientsrc_are_symmetrical: https://gitlab.freedesktop.org/gstreamer/gst-plugins-base/issues/221
    # elements_capsfilter.test_unfixed_downstream_caps: https://gitlab.freedesktop.org/gstreamer/gstreamer/issues/335
    # gst_rtspclientsink.test_record: https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/55
    # elements_audiotestsrc.test_layout: https://gitlab.freedesktop.org/gstreamer/gst-plugins-base/issues/535
    # camerabin.test_image_video_cycle: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/864
    # camerabin.test_single_video_recording: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/864#note_101558
    # camerabin.test_multiple_video_recordings: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/864#note_101646
    # curlhttpsrc.test_multiple_http_requests: https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/issues/932
    # audiomixer.test_flush_start_flush_stop: https://gitlab.freedesktop.org/gstreamer/gst-plugins-base/issues/555
    # check.gstreamer-sharp.SdpTests: https://gitlab.freedesktop.org/gstreamer/gstreamer-sharp/issues/17
    #
    # TO FURTHER INVESTIGATE:
    # check.gst-plugins-base.libs_gstglcolorconvert.test_reorder_buffer
    # check.gstreamer.gst_gstelement.test_foreach_pad
    # check.gstreamer.libs_baseparse.parser_pull_short_read
    # check.gstreamer.pipelines_seek.test_loopback_2
    # check.gst-plugins-base.elements_appsrc.test_appsrc_blocked_on_caps
    BLACKLIST: >
      -b check.gstreamer.pipelines_parse_launch.delayed_link
      -b check.gstreamer.gst_gstsystemclock.test_async_sync_interaction
      -b check.gstreamer.gst_gstsystemclock.test_periodic_multi
      -b check.gstreamer.gst_gstsystemclock.test_periodic_shot
      -b check.gstreamer.pipelines_seek.test_loopback_2
      -b check.gstreamer.gst_gstelement.test_foreach_pad
      -b check.gstreamer.libs_baseparse.parser_pull_short_read
      -b check.gst-plugins-base.elements_multisocketsink.test_sending_buffers_with_9_gstmemories
      -b check.gst-plugins-base.elements_multisocketsink.test_client_next_keyframe
      -b check.gst-plugins-base.elements_multisocketsink.test_add_client
      -b check.gst-plugins-base.libs_gstglcolorconvert.test_reorder_buffer
      -b check.gst-plugins-base.elements_audiotestsrc.test_layout
      -b check.gst-plugins-good.elements_souphttpsrc.test_icy_stream
      -b check.gst-plugins-good.elements_rtpbin.test_sender_eos
      -b check.gst-plugins-good.elements_rtpbin.test_cleanup_recv
      -b check.gst-plugins-good.elements_flvmux.test_incrementing_timestamps
      -b check.gst-plugins-good.elements_flvmux.test_video_caps_late
      -b check.gst-plugins-base.elements_appsrc.test_appsrc_blocked_on_caps
      -b check.gst-plugins-good.elements_splitmux.test_splitmuxsrc_sparse_streams
      -b check.gst-plugins-good.elements_splitmux.test_splitmuxsrc_caps_change
      -b check.gst-plugins-bad.elements_dtls.test_data_transfer
      -b check.gst-plugins-bad.elements_dtls.test_create_and_unref
      -b check.gst-plugins-bad.elements_camerabin.test_image_video_cycle
      -b check.gst-plugins-bad.elements_camerabin.test_single_video_recording
      -b check.gst-plugins-bad.elements_camerabin.test_multiple_video_recordings
      -b check.gst-plugins-bad.elements_curlhttpsrc.test_multiple_http_requests
      -b check.gst-plugins-good.elements_rtpsession.test_multiple_senders_roundrobin_rbs
      -b check.gst-plugins-bad.elements_shm.test_shm_live
      -b check.gst-plugins-good.elements_splitmux.test_splitmuxsink_async
      -b check.gst-plugins-bad.elements_netsim.netsim_stress
      -b check.gst-editing-services.nle_complex.test_one_expandable_another
      -b check.gst-editing-services.nle_simple.test_simplest
      -b check.gst-editing-services.ges_basic.test_ges_pipeline_change_state
      -b check.gst-editing-services.pythontests.pyunittest.python.test_timeline.TestTransitions.test_transition_type
      -b check.gst-editing-services.pythontests.pyunittest.python.test_timeline.TestTransitions.test_auto_transition
      -b check.gst-plugins-base.pipelines_tcp.test_that_tcpserversink_and_tcpclientsrc_are_symmetrical
      -b check.gstreamer.elements_capsfilter.test_unfixed_downstream_caps
      -b check.gst-rtsp-server.gst_rtspclientsink.test_record
      -b check.gst-rtsp-server.gst_rtspserver.test_shared_udp
      -b check.gst-plugins-base.elements_audiomixer.test_flush_start_flush_stop
      -b check.gstreamer-sharp.SdpTests
  script:
    - cd gst-build/
    - >
      ./gst-uninstalled.py
      gst-validate-launcher ${TEST_SUITE}
      -fs
      --mute
      --shuffle
      --no-display
      --dump-on-failure
      --meson-no-rebuild
      -M "${CI_PROJECT_DIR}/validate-output/"
      --xunit-file "${CI_PROJECT_DIR}/validate-output/logs/xunit.xml"
      ${BLACKLIST}
      ${EXTRA_VALIDATE_ARGS}
  artifacts:
    expire_in: '14 days'
    when: always
    paths:
      - 'gst-build/build/meson-logs/'
      - 'validate-output/logs'
    reports:
      junit:
        - "validate-output/logs/*.xml"
  # We disable the .build above, which this job usually depends upon for cerbero
  except:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

.test fedora x86_64:
  image: $FEDORA_IMAGE
  extends: '.test'
  dependencies:
    - build fedora x86_64

check fedora:
  extends: '.test fedora x86_64'
  variables:
    TEST_SUITE: "check.gst*"

# Valgrind
.valgrind fedora x86_64:
  extends: '.test fedora x86_64'
  stage: 'full tests'
  variables:
    SUPPRESSION_FILES: >
      gst-build/subprojects/gstreamer/tests/check/gstreamer.supp
      gst-build/subprojects/gst-plugins-base/tests/check/gst-plugins-base.supp
      gst-build/subprojects/gst-plugins-good/tests/check/gst-plugins-good.supp
      gst-build/subprojects/gst-plugins-bad/tests/check/gst-plugins-bad.supp
      gst-build/subprojects/gst-plugins-ugly/tests/check/gst-plugins-ugly.supp
      gst-build/subprojects/gst-libav/tests/check/gst-libav.supp
      gst-build/subprojects/gst-devtools/validate/data/gstvalidate.supp
      gst-build/subprojects/libnice/tests/libnice.supp
      gst-build/subprojects/libsoup/tests/libsoup.supp
      gst-build/subprojects/glib/glib.supp
    # These tests take very long compared to what they add, so let's skip them.
    # - check.*.generic_states.* - enough to run one of the sequences
    # - check.gstreamer.gst_gstelement.test_foreach_pad - 48s
    # - check.gstreamer.gst_gstinfo.info_post_gst_init_category_registration - 21s
    # - check.gstreamer.gst_gstsystemclock.test_resolution - 60s
    # - check.gstreamer.libs_aggregator.test_infinite_seek - 20s
    # - check.gstreamer.libs_aggregator.test_infinite_seek_50_src - 20s
    # - check.gstreamer.libs_gstharness.test_harness_element_ref - 20s
    # - check.gstreamer.pipelines_simple_launch_lines.test_2_elements - 58s
    # - check.gstreamer.pipelines_stress.test_stress - 54s
    # - check.gstreamer.pipelines_stress.test_stress_preroll - 27s
    # - check.gst-plugins-base.elements_appsrc.test_appsrc_block_deadlock - 265.595s
    # - check.gst-plugins-base.elements_audioresample.test_fft - 91.247s
    # - check.gst-plugins-base.elements_audioresample.test_timestamp_drift - 141.784s
    # - check.gst-plugins-base.elements-videoscale - superlong
    # - check.gst-plugins-base.libs_video.test_overlay_blend - 74.096s
    # - check.gst-plugins-base.libs_video.test_video_color_convert - 345.271s
    # - check.gst-plugins-base.libs_video.test_video_formats - 70.987s
    # - check.gst-plugins-base.libs_video.test_video_size_convert - 56.387s
    # - check.gst-plugins-base.elements_audiointerleave.test_audiointerleave_2ch_pipeline_ - 5 * 51.069s
    # - check.gst-plugins-base.elements_multifdsink.test_client_kick - 46.909s
    # - check.gst-plugins-base.elements_videotestsrc.test_all_patterns
    # - check.gst-plugins-base.elements_videotestsrc.test_patterns_are_deterministic
    # - check.gst-plugins-good.elements_shapewipe.test_general - 325s
    # - check.gst-plugins-good.elements_videocrop.test_cropping - 245s
    # - check.gst-plugins-good.elements_videomixer - 30s (also deprecated)
    # - check.gst-plugins-good.elements_rtp_payloading.rtp_jpeg_packet_loss - 109s
    # - check.gst-plugins-good.elements_videomixer.test_play_twice_then_add_and_play_again - 55s
    # - check.gst-plugins-good.pipelines_effectv.test_quarktv - 53s
    # - check.gst-plugins-good.elements_deinterlace.test_mode_disabled_passthrough - 52s
    # - check.gst-plugins-good.elements_deinterlace.test_mode_auto_deinterlaced_passthrough - 28s
    # - check.gst-plugins-good.elements_deinterleave.test_2_channels_caps_change - 30s
    # - check.gst-plugins-good.elements_deinterleave.test_2_channels - 22s
    # - check.gst-plugins-good.elements_rtpjitterbuffer.test_fill_queue - 22s
    # - check.gst-plugins-good.elements_splitmux.test_splitmuxsink_async - 20s
    # - check.gst-plugins-good.elements_videomixer.test_play_twice - 22s
    VALGRIND_SKIPLIST: >
      -b check.[a-z-]*.generic_states.test_state_changes_down_seq
      -b check.[a-z-]*.generic_states.test_state_changes_up_seq
      -b check.gstreamer.gst_gstelement.test_foreach_pad
      -b check.gstreamer.gst_gstinfo.info_post_gst_init_category_registration
      -b check.gstreamer.gst_gstsystemclock.test_resolution
      -b check.gstreamer.libs_aggregator.test_infinite_seek
      -b check.gstreamer.libs_aggregator.test_infinite_seek_50_src
      -b check.gstreamer.libs_gstharness.test_harness_element_ref
      -b check.gstreamer.pipelines_simple_launch_lines.test_2_elements
      -b check.gstreamer.pipelines_stress.test_stress
      -b check.gstreamer.pipelines_stress.test_stress_preroll
      -b check.gst-plugins-base.elements_appsrc.test_appsrc_block_deadlock
      -b check.gst-plugins-base.elements_audioresample.test_fft
      -b check.gst-plugins-base.elements_audioresample.test_timestamp_drift
      -b check.gst-plugins-base.elements-videoscale
      -b check.gst-plugins-base.libs_video.test_overlay_blend
      -b check.gst-plugins-base.libs_video.test_video_color_convert
      -b check.gst-plugins-base.libs_video.test_video_formats
      -b check.gst-plugins-base.libs_video.test_video_size_convert
      -b check.gst-plugins-base.elements_audiointerleave.test_audiointerleave_2ch_pipeline_
      -b check.gst-plugins-base.elements_multifdsink.test_client_kick
      -b check.gst-plugins-base.elements_videotestsrc.test_all_patterns
      -b check.gst-plugins-base.elements_videotestsrc.test_patterns_are_deterministic
      -b check.gst-plugins-good.elements_shapewipe.test_general
      -b check.gst-plugins-good.elements_videocrop.test_cropping
      -b check.gst-plugins-good.elements_videomixer
      -b check.gst-plugins-good.elements_rtp_payloading.rtp_jpeg_packet_loss
      -b check.gst-plugins-good.elements_videomixer.test_play_twice_then_add_and_play_again
      -b check.gst-plugins-good.pipelines_effectv.test_quarktv
      -b check.gst-plugins-good.elements_deinterlace.test_mode_disabled_passthrough
      -b check.gst-plugins-good.elements_deinterlace.test_mode_auto_deinterlaced_passthrough
      -b check.gst-plugins-good.elements_deinterleave.test_2_channels_caps_change
      -b check.gst-plugins-good.elements_deinterleave.test_2_channels
      -b check.gst-plugins-good.elements_rtpjitterbuffer.test_fill_queue
      -b check.gst-plugins-good.elements_splitmux.test_splitmuxsink_async
      -b check.gst-plugins-good.elements_videomixer.test_play_twice
    # - check.gst-plugins-good.elements_rtpjitterbuffer.test_push_* - flaky in valgrind
    # - check.gst-plugins-base.pipelines_gl_launch_lines - driver leaks / memory access
    # - check.gst-plugins-base.libs_gstgl - driver leaks / memory access
    # - check.gst-plugins-base.elements_gl - driver leaks / memory access
    # - check.gst-plugins-base.elements_libvisual - uninitialized memory access
    # - check.gst-plugins-base.generic_states - need to add gl elements to ignore list but only if using valgrind
    VALGRIND_BLACKLIST: >
      -b check.gstreamer.gst_gstsystemclock.test_stress_cleanup_unschedule
      -b check.gstreamer.gst_gstsystemclock.test_stress_reschedule
      -b check.gstreamer.tools_gstinspect
      -b check.gst-plugins-base.elements_videoscale
      -b check.gst-plugins-base.pipelines_gl_launch_lines
      -b check.gst-plugins-base.libs_gstgl
      -b check.gst-plugins-base.elements_gl
      -b check.gst-plugins-base.elements_libvisual
      -b check.gst-plugins-base.generic_states
      -b check.gst-plugins-good.elements_rtpjitterbuffer.test_push_backward_seq
      -b check.gst-plugins-good.elements_rtpjitterbuffer.test_push_unordered
      -b check.gst-plugins-bad.elements_assrender
      -b check.gst-plugins-bad.elements_camerabin
      -b check.gst-plugins-bad.elements_line21
      -b check.gst-plugins-bad.elements_mpeg2enc
      -b check.gst-plugins-bad.elements_mplex
      -b check.gst-plugins-bad.elements_mxfmux
      -b check.gst-plugins-bad.elements_x265enc
      -b check.gst-plugins-bad.elements_zbar
      -b check.gst-libav.generic_plugin_test
      -b check.gst-libav.generic_libavcodec_locking
      -b check.gst-libav.elements_avdemux_ape
    VALGRIND_OPTS: "--suppressions=/tmp/gstreamer-ci.supp"
    EXTRA_VALIDATE_ARGS: "--valgrind ${VALGRIND_BLACKLIST} ${VALGRIND_SKIPLIST}"
    ORC_CODE: "backup"
  # Some suppression files are missing a newline at the end which messes things
  # up when concatenating them. awk will add missing newlines (unlike cat)
  before_script:
  - awk '{print}' ${SUPPRESSION_FILES} > /tmp/gstreamer-ci.supp

valgrind core:
  extends: '.valgrind fedora x86_64'
  variables:
    TEST_SUITE: "check.gstreamer\\..*"
  only:
    variables:
      - $CI_PROJECT_NAME == "gstreamer"

valgrind base:
  extends: '.valgrind fedora x86_64'
  variables:
    TEST_SUITE: "check.gst-plugins-base\\..*"
  only:
    variables:
      - $CI_PROJECT_NAME =~ /^(gstreamer|gst-plugins-base)$/

valgrind good:
  extends: '.valgrind fedora x86_64'
  variables:
    TEST_SUITE: "check.gst-plugins-good\\..*"
  only:
    variables:
      - $CI_PROJECT_NAME =~ /^(gstreamer|gst-plugins-base|gst-plugins-good)$/

valgrind ugly:
  extends: '.valgrind fedora x86_64'
  variables:
    TEST_SUITE: "check.gst-plugins-ugly\\..*"
  only:
    variables:
      - $CI_PROJECT_NAME =~ /^(gstreamer|gst-plugins-base|gst-plugins-ugly)$/

valgrind bad:
  extends: '.valgrind fedora x86_64'
  variables:
    TEST_SUITE: "check.gst-plugins-bad\\..*"
  only:
    variables:
      - $CI_PROJECT_NAME =~ /^(gstreamer|gst-plugins-base|gst-plugins-good|gst-plugins-bad)$/


# Template for Cerbero GStreamer Build
#
# Parameters:
# CONFIG: The name of the configuration file to use
#
# Produces runtime and devel tarball packages.
.cerbero:
  stage: "full builds"
  image: $CERBERO_IMAGE
  dependencies:
    - "manifest"
  variables:
    CCACHE_BASEDIR: "${CI_PROJECT_DIR}"
    CCACHE_DIR: "${CI_PROJECT_DIR}/ccache"
    CCACHE_MAXSIZE: "1.7G"
    CERBERO_HOME: "${CI_PROJECT_DIR}/cerbero-build"
    CERBERO_SOURCES: "${CI_PROJECT_DIR}/cerbero-sources"
    CERBERO_DEPS: "cerbero-deps.tar.gz"
    CERBERO_ARGS: "${DEFAULT_CERBERO_ARGS}"
    CERBERO: "./cerbero-uninstalled -c config/${CONFIG} -c localconf.cbc -m manifest.xml"
  before_script:
    # FIXME Wrong namespace
    # Workaround build-tools having hardcoded internal path
    - mkdir -p /builds/gstreamer
    - ln -sf ${CI_PROJECT_DIR} /builds/gstreamer/cerbero
    - rsync -aH /cerbero/ .
    - test -f ${CERBERO_DEPS} && tar -C ${CERBERO_HOME} -xf ${CERBERO_DEPS}
    - echo "home_dir = \"${CERBERO_HOME}\"" >> localconf.cbc
    - echo "local_sources = \"${CERBERO_SOURCES}\"" >> localconf.cbc
    - ./cerbero-uninstalled --self-update manifest.xml
    - ccache -z
  script:
    - $CERBERO $CERBERO_ARGS show-config
    - $CERBERO $CERBERO_ARGS fetch-bootstrap --build-tools-only
    - $CERBERO $CERBERO_ARGS fetch-package --deps gstreamer-1.0
    - $CERBERO $CERBERO_ARGS fetch-cache
    - $CERBERO $CERBERO_ARGS bootstrap --offline --build-tools-only
    - $CERBERO $CERBERO_ARGS package --offline -t -o ${CI_PROJECT_DIR} gstreamer-1.0
    - ccache -s
  except:
    variables:
      - $CI_PROJECT_NAME == "gst-build"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - "${CCACHE_DIR}"
      - "${CERBERO_SOURCES}"
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_SHA}"
    expire_in: '5 days'
    when: 'always'
    paths:
      - "manifest.xml"
      - "cerbero-build/logs"
      - "*.tar.bz2"

# Template for Cerbero GStreamer Deps
#
# This template is used by cerbero/ project to pre-built the GStreamer
# depedencies. When available, the .cerbero jobs will download this artifact
# in order to speed up the build.
#
# Parameters:
# CONFIG: The name of the configuration file to use
# ARCH: The cerbero <os>_<cpu> (used in cache key)
#
# Produce an artifact with the dist/ and .cache along
# with the associated build-tools.
.cerbero deps:
  extends: .cerbero
  stage: "build"
  script:
    - $CERBERO $CERBERO_ARGS show-config
    - $CERBERO $CERBERO_ARGS fetch-bootstrap --build-tools-only
    - $CERBERO $CERBERO_ARGS fetch-package --deps gstreamer-1.0
    - $CERBERO $CERBERO_ARGS bootstrap --offline --build-tools-only
    - $CERBERO $CERBERO_ARGS build-deps --offline
          gstreamer-1.0 gst-plugins-base-1.0 gst-plugins-good-1.0
          gst-plugins-bad-1.0 gst-plugins-ugly-1.0 gst-rtsp-server-1.0
          gst-libav-1.0 gst-validate gst-editing-services-1.0 libnice
    - $CERBERO $CERBERO_ARGS fetch-cache --skip-fetch --job-id=${CI_JOB_ID}
    - tar -C ${CERBERO_HOME} -czf $CERBERO_DEPS
              build-tools build-tools.cache
              dist/${ARCH} ${ARCH}.cache
    - ccache -s
  only:
    variables:
      - $CI_PROJECT_NAME == "cerbero"
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_SHA}"
    expire_in: '10 days'
    when: 'always'
    paths:
      - "manifest.xml"
      - "cerbero-build/logs"
      - "cerbero-build/cerbero-deps.log"
      - "${CERBERO_DEPS}"

#
# Cerbero Linux X86_64 build
#
cerbero deps fedora x86_64:
  extends: '.cerbero deps'
  variables:
    CONFIG: "linux.config"
    ARCH: "linux_x86_64"

.cerbero fedora x86_64:
  extends: '.cerbero'
  variables:
    CONFIG: "linux.config"

cerbero fedora x86_64:
  extends: '.cerbero fedora x86_64'
  dependencies:
    - "cerbero deps fedora x86_64"
  only:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

build cerbero fedora x86_64:
  extends: '.cerbero fedora x86_64'
  except:
    variables:
      - $CI_PROJECT_NAME == "cerbero"


#
# Cerbero Android Universal build
#
cerbero deps android universal:
  extends: '.cerbero deps'
  variables:
    CERBERO_ARGS: "${DEFAULT_CERBERO_ARGS} -v nowerror"
    CONFIG: "cross-android-universal.cbc"
    ARCH: "android_universal"

.cerbero android universal:
  extends: '.cerbero'
  variables:
    CERBERO_ARGS: "${DEFAULT_CERBERO_ARGS} -v nowerror"
    CONFIG: "cross-android-universal.cbc"

cerbero android universal:
  extends: '.cerbero android universal'
  dependencies:
    - "cerbero deps android universal"
  only:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

build cerbero android universal:
  extends: '.cerbero android universal'
  except:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

#
# Cerbero Cross Windows builds
#
cerbero deps windows x86:
  extends: '.cerbero deps'
  variables:
    CONFIG: "cross-win32.cbc"
    ARCH: "windows_x86"

.cerbero cross win32:
  extends: '.cerbero'
  variables:
    CONFIG: "cross-win32.cbc"

cerbero cross win32:
  extends: '.cerbero cross win32'
  dependencies:
    - "cerbero deps windows x86"
  only:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

build cerbero cross win32:
  extends: '.cerbero cross win32'
  except:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

cerbero deps windows x86_64:
  extends: '.cerbero deps'
  variables:
    CONFIG: "cross-win64.cbc"
    ARCH: "windows_x86_64"

.cerbero cross win64:
  extends: '.cerbero'
  variables:
    CONFIG: "cross-win64.cbc"

cerbero cross win64:
  extends: '.cerbero cross win64'
  dependencies:
    - "cerbero deps windows x86_64"
  only:
    variables:
      - $CI_PROJECT_NAME == "cerbero"

build cerbero cross win64:
  extends: '.cerbero cross win64'
  except:
    variables:
      - $CI_PROJECT_NAME == "cerbero"
